/* General Body and HTML Reset/Setup */
html, body {
    margin: 0;
    padding: 0;
    width: 100%;
    height: 100%;
    overflow: hidden; /* Prevent scrollbars on the body itself */
    font-family: 'monospace', monospace; /* Default monospace font */
    box-sizing: border-box;
}

*, *:before, *:after {
    box-sizing: inherit;
}

/*
   -------------------------------------------------------------------------
   App Structure Layout (some of this is also controlled by JS positioning)
   -------------------------------------------------------------------------
*/

/* Body will be the main container, JS will inject content */
/* JavaScript sets body background color, text color based on theme */

/* Main Menu (Top Bar) - JS controls fixed positioning and background */
/* .main-menu-container (if you create one in JS or use an ID) */
/* Example:
#mainMenuComponent {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    z-index: 1000;
    padding: 10px;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 5px;
    background-color: #333; /* Default, JS will override with theme */
    /* box-shadow: 0 2px 5px rgba(0,0,0,0.2);
}
*/

/* Left Contextual Menu - JS controls fixed positioning and background */
/* .left-menu-container (if you create one in JS or use an ID) */
/* Example:
#leftMenuComponent {
    position: fixed;
    top: 70px; /* Below main menu */
    left: 10px;
    width: 140px;
    height: calc(100vh - 80px); /* Adjust based on main menu height */
    /* overflow-y: auto;
    padding: 10px 0;
    z-index: 900;
    background-color: #444; /* Default, JS will override */
    /* border-right: 1px solid #555; /* Default, JS will override */
/* }
*/

/* Canvas Area - JS controls positioning and sizing */
/* .canvas-container (if you create one in JS or use an ID) */
/* Example:
#canvasComponent {
    position: absolute; /* Or relative if body is flex/grid */
    /* margin-top: 60px;  /* Space for main menu */
    /* margin-left: 150px; /* Space for left menu */
    /* JS sets width, height, font-size, background-color */
/* }
*/


/*
   -------------------------------------------------------------------------
   Component Base Styles (JS will heavily override these with theme data)
   -------------------------------------------------------------------------
*/

/* Pixel Base Style - JS controls most of this dynamically */
pixel { /* Assuming 'pixel' is the tag name JS creates */
    display: inline-block; /* Or absolute, as currently in JS */
    position: absolute;
    text-align: center;
    vertical-align: middle;
    user-select: none;
    -webkit-user-select: none;
    /* JS sets: width, height, margin-left, margin-top, borders, colors, background-color, border-radius, text-shadow (for glow) */
}

/* Button Base Styles */
button, .button-component { /* Target actual <button> or a class if JS uses divs */
    font-family: 'monospace', monospace;
    font-size: 11px;
    padding: 10px 15px;
    border-radius: 8px;
    height: auto;
    border: 1px solid black; /* Default, JS overrides */
    background-color: #eee; /* Default, JS overrides */
    color: black; /* Default, JS overrides */
    cursor: pointer;
    user-select: none;
    -webkit-user-select: none;
    transition: background-color 0.1s ease-in-out, box-shadow 0.1s ease-in-out;
    margin: 3px; /* Basic spacing */
    box-sizing: border-box;
    vertical-align: middle; /* Align icons and text nicely if they are separate spans */
}

button:hover, .button-component:hover {
    /* box-shadow: 0 2px 4px rgba(0,0,0,0.15); */ /* JS might handle hover effects too */
}

button:active, .button-component:active {
    /* transform: translateY(1px); */ /* JS handles click visual feedback */
}

/* Input Base Styles */
input[type="text"], .input-component {
    height: 30px;
    border: 1px solid grey; /* Default, JS overrides */
    border-radius: 8px;
    font-family: 'monospace', monospace;
    font-size: 14px;
    outline: none;
    padding: 0 10px;
    box-sizing: border-box;
    background-color: white; /* Default, JS overrides */
    color: black; /* Default, JS overrides */
}

/* Popup Base Styles */
.popup-component { /* Assuming JS adds this class to popup containers */
    position: absolute; /* Or fixed, depending on desired behavior */
    z-index: 1000; /* Above most other content */
    background-color: white; /* Default, JS overrides */
    color: black; /* Default, JS overrides */
    border: 1px solid #ccc; /* Default, JS overrides */
    box-shadow: 0px 0px 20px rgba(0,0,0,0.2);
    border-radius: 10px;
    padding: 15px;
    user-select: none;
    -webkit-user-select: none;
    /* JS typically controls display: none/block */
}

/* Help Component Specific Scrollbar (example, Webkit only) */
.help-component::-webkit-scrollbar {
    width: 8px;
}
.help-component::-webkit-scrollbar-track {
    background: #f1f1f1; /* Default, JS theme might influence */
}
.help-component::-webkit-scrollbar-thumb {
    background: #888; /* Default, JS theme might influence */
    border-radius: 4px;
}
.help-component::-webkit-scrollbar-thumb:hover {
    background: #555; /* Default, JS theme might influence */
}
.help-component { /* Ensure overflow is set for scrollbars to appear */
    overflow-y: auto;
    scrollbar-width: thin; /* For Firefox */
    scrollbar-color: #888 #f1f1f1; /* For Firefox: thumb track */
}


/* Informer Component Base Styles */
.informer-component {
    position: fixed;
    /* Other positioning and base styles set by JS */
    transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out;
    /* Start hidden and slightly off screen for transition */
    opacity: 0;
    transform: translateX(-50%) translateY(100%); /* JS will bring it to translateY(0) */
}


/*
   -------------------------------------------------------------------------
   CSS Placeholders/Ideas for ADVANCED Features (JS would toggle these classes)
   -------------------------------------------------------------------------
*/

/* For Outlined/Stroked Text (Basic - browser support varies for non-webkit) */
.text-outlined {
    -webkit-text-stroke: 1px black; /* Example: 1px black stroke */
    /* text-stroke: 1px black; */ /* Standard, but less supported */
    paint-order: stroke fill; /* Ensures stroke is behind fill */
    /* fill-color: white; /* If you want hollow text with just an outline */
}

/* For a more pronounced Glow effect (supplementing JS text-shadow if needed) */
.text-glow-strong {
    /* Can use CSS animations for pulsing glow, or stronger static glow */
    text-shadow: 0 0 5px #0f0, 0 0 10px #0f0, 0 0 15px #0f0; /* Example green glow */
}

/* For specific font rendering like Arial Bold */
.font-arial-bold {
    font-family: Arial, sans-serif;
    font-weight: bold;
}


/*
   -------------------------------------------------------------------------
   Utility Classes
   -------------------------------------------------------------------------
*/
.hidden {
    display: none !important; /* Force hide */
}